[project]
name = "shell-cmd-on-change"
version = "1.0.0"
authors = [
    { name = "Ke Xue", email = "xueke.kent@gmail.com" },
]
description = "Post-merge Git hook that runs a shell command only when watched files changed after git pull or git merge."
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
]
requires-python = "~=3.11"
dependencies = [
    "pygit2==1.16.0",
    "colorama==0.4.6"
]

[project.scripts]
shell-cmd-on-change = "shell_cmd_on_change:main"

[build-system]
requires = [
    "setuptools>=65",
    "wheel"
]
build-backend = "setuptools.build_meta"

[tool.setuptools]
zip-safe = false
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
shell_cmd_on_change = ["py.typed"]

[tool.poetry]
packages = [{ include = "**/*", from = "src" }]

[tool.poetry.dependencies]
python = "^3.11" # 3.13 has build issues for pygit2. 3.11 has been verified to work.

[tool.poetry.group.develop]
optional = true

[tool.poetry.group.develop.dependencies]
ipykernel = "^6.27.1"

[tool.poetry.group.linting]
optional = true

[tool.poetry.group.linting.dependencies]
flake8 = "7.1.1" # This version must be the same as in `./.pre-commit-config.yaml`.
black = "24.10.0" # This version must be the same as in `./.pre-commit-config.yaml`.
mypy = "^1.12.0"

[tool.poetry.group.test]
optional = false

[tool.poetry.group.test.dependencies]
pytest = "^8.2.2"
pytest-mock = "^3.10.0"
pytest-cov = "^6.0.0"

[tool.black]
line-length = 88
target-version = ['py311']

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-v --cov=src --cov-report=term-missing --cov-config=tox.ini"
